name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build_CPU:

    name: ${{ matrix.platform }}, py${{ matrix.python-version }}, ${{ matrix.extra }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [
          # ubuntu-latest,
          ubuntu-22.04,
          ubuntu-20.04,
          # ubuntu-18.04,
          # # windows-latest,
          windows-2022,
          windows-2019,
          # windows-2016,
          # # macos-latest,
          # macos-12.0,  ## RH: not working 20230507
          macos-11.0,
          # macos-10.15,
        ]
        python-version: [ 
          # "3.8",
          "3.9",
          # "3.10",  ## RH: not working 20230507
        ]
        extra: [
          core,
          # core_latest,
        ]

    steps:
    
    - name: Set up conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: latest
        activate-environment: ROICaT
        auto-activate-base: true
        auto-update-conda: false
        remove-profiles: true
        architecture: x64
        clean-patched-environment-file: true
        run-post: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check out repository code
      uses: actions/checkout@v3
        
    - name: PowerShell Core
      shell: pwsh
      run: |
          conda info
          conda list
    
    - name: Prepare path, environment, and basic pip packages
      run: |
        ## cd to github workspace
        # cd $GITHUB_WORKSPACE
        
        ## check current directory (pwd)
        pwd

        ## activate conda environment        
        conda activate ROICaT || true

        ## install pip, wheel, setuptools
        python -m pip install --upgrade pip setuptools wheel pytest





    - name: Install ROICaT with pip dependencies - Windows AND core
      if: runner.os == 'Windows' && matrix.extra == 'core'
      run: |
        pip install torch==1.12.1+cpu torchvision==0.13.1+cpu torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cpu
        pip install --user -v -e .[core]
    # - name: Install ROICaT with pip dependencies - Windows AND core_latest
    #   if: runner.os == 'Windows' && matrix.extra == 'core_latest'
    #   run: |
    #     pip3 install torch torchvision torchaudio
    #     pip install --user -v -e .[core_latest]


    - name: Install ROICaT with pip dependencies - Ubuntu AND core
      if: runner.os == 'Linux' && matrix.extra == 'core'
      run: |
        pip install torch==1.12.1+cpu torchvision==0.13.1+cpu torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cpu
        pip install --user -v -e .[core]
    # - name: Install ROICaT with pip dependencies - Ubuntu AND core_latest
    #   if: runner.os == 'Linux' && matrix.extra == 'core_latest'
    #   run: |
    #     pip3 install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cpu
    #     pip install --user -v -e .[core_latest]


    - name: Install ROICaT with pip dependencies - macOS AND core
      if: runner.os == 'macOS' && matrix.extra == 'core'
      run: |
        pip install torch==1.12.1 torchvision==0.13.1 torchaudio==0.12.1
        pip install --user -v -e .[core]
    # - name: Install ROICaT with pip dependencies - macOS AND core_latest
    #   if: runner.os == 'macOS' && matrix.extra == 'core_latest'
    #   run: |
    #     pip3 install torch torchvision torchaudio
    #     pip install --user -v -e .[core_latest]




    - name: Run pytest on ROICaT and some key dependencies
      run: |
        # pip install tox tox-gh-actions
        pip install pytest
        pytest -v
