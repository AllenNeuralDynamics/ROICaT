# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: build_GPU

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:

    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [
          ubuntu-latest,
          windows-latest,
          ubuntu-22.04,
          ubuntu-20.04,
          windows-2022,
          windows-2019,
        ]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    
    - name: Set up conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: latest
        activate-environment: ROICaT
        auto-activate-base: true
        auto-update-conda: false
        remove-profiles: true
        architecture: x64
        clean-patched-environment-file: true
        run-post: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check out repository code
      uses: actions/checkout@v3
        
    - name: PowerShell Core
      shell: pwsh
      run: |
          conda info
          conda list
    
    - name: Prepare path, environment, and basic pip packages
      run: |
        ## cd to github workspace
        # cd $GITHUB_WORKSPACE
        
        ## check current directory (pwd)
        pwd

        ## activate conda environment        
        conda activate ROICaT || true

        ## install pip, wheel, setuptools, tox
        python -m pip install --upgrade pip setuptools wheel pytest tox tox-gh-actions

        # python -m pip install -r requirements_GPU.txt
        # if [ -f requirements_GPU.txt ]; then pip install -r requirements_GPU.txt; fi
        # conda env update --name ROICaT --file environment_GPU.yml

    ## If it is Windows use set "INSTALL_ROICAT_GPU=1" && pip install -v --user -e . (remember to use parentheses for the if statement, no else statement)
    ## If it is Linux use INSTALL_ROICAT_GPU=1 pip install -v --user -e .
    - name: Install ROICaT with pip dependencies - Windows
      if: runner.os == 'Windows'
      run: set "INSTALL_ROICAT_GPU=1" && pip install -v --user -e .
      
    - name: Install ROICaT with pip dependencies - Linux
      if: runner.os == 'Linux'
      run: INSTALL_ROICAT_GPU=1 pip install -v --user -e .
      

    - name: Install ROICaT test dependencies
      run: |
        pip install pytest

    - name: Test with pytest
      run: |
        pytest -v